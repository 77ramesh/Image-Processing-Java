package application;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import org.opencv.core.Core;
import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.videoio.VideoCapture;

public class EdgeDetector {

	public static void main(String[] args) {
		
		System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
		
		startVideoStream();

	}
	
	static void startVideoStream() {
		Mat frame = new Mat();
	    //0; default video device id
	    VideoCapture camera = new VideoCapture(0);
	    
	    JFrame jframe = new JFrame("Sobel Edge Detect");
	    jframe.setSize(700, 700);
	    jframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    jframe.setVisible(true);
	    
	    JLabel vidpanel = new JLabel();
	    vidpanel.setBounds(0, 30, 700, 670);
	    
	    //start button
	    JButton start_bttn = new JButton("Start");
	    start_bttn.setBounds(jframe.getWidth()/2 - 100, 0, 100, 30);
	    
	    //end button
	    JButton stop_bttn = new JButton("Exit");
	    stop_bttn.setBounds(jframe.getWidth()/2, 0, 100, 30);
	    
	    jframe.setContentPane(vidpanel);
	    
	    jframe.add(start_bttn);
	    jframe.add(stop_bttn);
	    
	    /**null layout: if not null (when not using any layout manager),
	    on resizing screen button will go full screen*/
	    jframe.setLayout(null);
	    
	    while (true) {
	        if (camera.read(frame)) {
	            
	            try {
					vidpanel.setIcon(new ImageIcon(Mat2BufferedImage(frame)));
				} catch (Exception e1) {
					e1.printStackTrace();
				}
	            
	            vidpanel.repaint();

	        }
	    }
	}
	
	
	//converting the matrix generated by open CV to buffered image
	static BufferedImage Mat2BufferedImage(Mat matrix)throws Exception {
		
		Mat draw = new Mat();
		Mat gray = new Mat();
		Mat wide = new Mat();
		
		Imgproc.cvtColor(matrix, gray, Imgproc.COLOR_BGR2GRAY);
		Imgproc.Canny(gray, wide, 50, 150, 3, false);
		wide.convertTo(draw, CvType.CV_8U);
		
	    MatOfByte mob = new MatOfByte();
	    Imgcodecs.imencode(".jpg", draw, mob);
	    byte ba[] = mob.toArray();

	    BufferedImage bi = ImageIO.read(new ByteArrayInputStream(ba));
	    
	    return bi;
	}

}
